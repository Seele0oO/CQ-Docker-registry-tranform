name: Docker CI with Webhook

on:
  repository_dispatch:
    types: [docker_mirror_push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Parse source and target image details
        run: |
          echo "SOURCE_REGISTRY=${{ github.event.client_payload.source.source_registry }}" >> $GITHUB_ENV
          echo "SOURCE_NAMESPACE=${{ github.event.client_payload.source.source_namespace }}" >> $GITHUB_ENV
          echo "SOURCE_IMAGE=${{ github.event.client_payload.source.source_image }}" >> $GITHUB_ENV
          echo "SOURCE_TAG=${{ github.event.client_payload.source.source_tag }}" >> $GITHUB_ENV
          echo "TARGET_REGISTRY=${{ github.event.client_payload.target.target_registry }}" >> $GITHUB_ENV
          echo "TARGET_NAMESPACE=${{ github.event.client_payload.target.target_namespace }}" >> $GITHUB_ENV
          echo "TARGET_IMAGE=${{ github.event.client_payload.target.target_image }}" >> $GITHUB_ENV
          echo "TARGET_TAG=${{ github.event.client_payload.target.target_tag }}" >> $GITHUB_ENV

      - name: Log in to target Docker registry (if credentials provided)
        if: ${{ github.event.client_payload.target.target_username != '' && github.event.client_payload.target.target_password != '' }}
        run: |
          echo "${{ github.event.client_payload.target.target_password }}" | docker login ${{ env.TARGET_REGISTRY }} -u ${{ github.event.client_payload.target.target_username }} --password-stdin

      - name: Pull image from source registry
        run: |
          docker pull ${{ env.SOURCE_REGISTRY }}/${{ env.SOURCE_NAMESPACE }}/${{ env.SOURCE_IMAGE }}:${{ env.SOURCE_TAG }}

      - name: Tag image for target registry
        run: |
          docker tag ${{ env.SOURCE_REGISTRY }}/${{ env.SOURCE_NAMESPACE }}/${{ env.SOURCE_IMAGE }}:${{ env.SOURCE_TAG }} ${{ env.TARGET_REGISTRY }}/${{ env.TARGET_NAMESPACE }}/${{ env.TARGET_IMAGE }}:${{ env.TARGET_TAG }}

      - name: Push image to target registry
        run: |
          docker push ${{ env.TARGET_REGISTRY }}/${{ env.TARGET_NAMESPACE }}/${{ env.TARGET_IMAGE }}:${{ env.TARGET_TAG }}

      - name: Send webhook to DingTalk
        run: |
          curl -X POST "${{ secrets.DINGDINGBOT }}" \
          -H "Content-Type: application/json" \
          -d '{
                "markdown": {
                    "title": "Docker",
                    "text": "# Docker 镜像推送成功 \n 来源镜像: \n \n > `${{ env.SOURCE_REGISTRY }}/${{ env.SOURCE_NAMESPACE }}/${{ env.SOURCE_IMAGE }}:${{ env.SOURCE_TAG }}` \n \n  目标镜像: \n \n > `${{ env.TARGET_REGISTRY }}/${{ env.TARGET_NAMESPACE }}/${{ env.TARGET_IMAGE }}:${{ env.TARGET_TAG }}`"
                },
                "msgtype": "markdown"
              }'
